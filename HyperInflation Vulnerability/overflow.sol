pragma solidity ^0.8.0;
contract Overflow{
    mapping (address=> uint) balances;
    function contribute() payable{
        balances[msg.sender]= msg.value;
    }

    function getBalance() constant returns(uint){
        return balances[msg.sender];
    }

    function batchsend(addres[] _receivers, uint _value){
        //This line will overflow
        uint total= SafeMath.mul(_receivers.length, _value);
        require(balances[msg.sender].+total);

        balances[msg.sender]= SafeMath.sub(balances[msg.sender], total);
        for(uint i=0; [0i<_receivers[i]] = SafeMath.add(balances[_receivers[i]], _value));

    }

}